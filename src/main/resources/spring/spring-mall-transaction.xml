<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-4.0.xsd  
	http://www.springframework.org/schema/aop  
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/jdbc  
	http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd">
	
	<!-- 加载jdbc配置文件 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
    	<property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
	        <list>
	        	<value>classpath:basic-jdbc.properties</value>
	        </list>
        </property>
    </bean>

    <bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialPoolSize}" />
		<property name="maxActive" value="${jdbc.maxPoolSize}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="maxWait" value="3000"/>
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="timeBetweenEvictionRunsMillis" value="${dbcp.timeBetweenEvictionRunsMillis}" />
		<property name="numTestsPerEvictionRun" value="${dbcp.numTestsPerEvictionRun}" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="180"/>
		<property name="minEvictableIdleTimeMillis" value="${dbcp.minEvictableIdleTimeMillis}" />

	</bean>
	
	<!-- MyBatis数据库标识提供者,可以在select/update/delete/insert加上databaseId的方式来标识不同的数据库，也可以直接使用属性<if test="_databaseId == 'mysql'">来判断不同的数据库 -->
	<bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">  
         <property name="properties">
         	<props>  
                <prop key="Oracle">oracle</prop> 
                <prop key="MySQL">mysql</prop>  
                <prop key="Microsoft SQL Server">sqlserver</prop>  
                <prop key="DB2">db2</prop>  
            </props>
         </property>  
    </bean>
    <!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:mybatis/**/*Dao.xml" />
		<property name="databaseIdProvider" ref="databaseIdProvider"/>
		<property name="typeAliasesPackage" value="com.cdc.entity"/>
		<property name="plugins" >
			<array>
				<bean class="com.cdc.common.mybatis.PaginationInterceptor">
					<property name="properties">
						<props>
							<prop key="dialect">${jdbc.dialect}</prop>  
						</props>
					</property>
				</bean>
				<!-- CAT埋点集成MyBatis性能拦截器 -->
				<bean class="com.cdc.common.mybatis.SqlInterceptor"/>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<props>
							<!--<prop key="dialect">${jdbc.dialect}</prop>-->
							<prop key="reasonable">true</prop>
						</props>
					</property>
				</bean>
			</array>
		</property>
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
  		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<aop:config>
		<aop:pointcut id="serviceMethod"
			expression="execution(* com.cdc.*.service..*.*(..))" />
		<aop:pointcut id="lkkServiceMethod"
			expression="execution(* com.lkk.tyj.*.service..*.*(..))" />
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
		<!-- Alan 2018年4月3日18:26:36 修改 -->
		<aop:advisor pointcut-ref="lkkServiceMethod" advice-ref="txAdvice" />
		<!-- 也可以下面这样配置-->
		<!-- 
		<aop:pointcut id="baseServiceMethod"
			expression="execution(* com.cdc.common.service..*.*(..))" />
		<aop:pointcut id="serviceMethod"
			expression="execution(* com.cdc.service..*.*(..))" />
		<aop:advisor pointcut-ref="baseServiceMethod" advice-ref="txAdvice" />
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
		 -->
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="process*" propagation="REQUIRED"/>
			<tx:method name="*" propagation="REQUIRED"/>

		</tx:attributes>
	</tx:advice>
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>


